power <- as.numeric(readline("Enter a power: "))
eval <- 2 ** power
print(eval %% 10)
source("C:/Users/Trainee/Desktop/Savadow/R/Assessment/main.R", echo=TRUE)
library(dplyr)
path <- "C:/Users/Trainee/Desktop/Savadow/Brewery_data.csv"
df <- read_csv(path)
percentage_function <- function(year){
year_val <- df$YEARS == year
year_df <- df[year_val,]
unique_months <- unique(year_df$MONTHS)
sum_profit <- c()
percent <- c()
for (i in unique_months){
months <- year_df$MONTHS == i
months_df <- year_df[months,]
sum_months <- sum(months_df$PROFIT)
sum_profit <- c(sum_profit, sum_months)
}
for (i in sum_profit){
percent_formula <- round((i/ sum(sum_profit))* 100, 3)
percent <- c(percent, percent_formula)
}
data_percent <- data.frame(
main_data = unique_months,
percentage = percent
)
return(data_percent)
}
month_percent <- percentage_function(2019)
#NUMBER 8
country_val <- df$COUNTRIES == "Senegal"
country_df <- df[country_val,]
unique_brand <- unique(country_df$BRANDS)
#NUMBER 8
country_val <- df$COUNTRIES == "Senegal"
############SECTION B
new.function <- function(df2){
county <- df2$COUNTRIES
territories <- c()
for (i in county){
if (i == "Nigeria" | i == "Ghana"){
territories <- c(territories, "Anglophone")
} else {
territories <- c(territories, "Francophone")
}
}
return(territories)
}
add.dataframe <- function(df2, territories){
df3 <- mutate(df2, TERRITORY = territories)
return(df3)
}
new_territory <- new.function(df)
add_df <- add.dataframe(df, new_territory)
View(add_df)
############SECTION B
new.function <- function(df2){
county <- df2$COUNTRIES
territories <- c()
for (i in county){
if (i == "Nigeria" | i == "Ghana"){
territories <- c(territories, "Anglophone")
} else {
territories <- c(territories, "Francophone")
}
}
return(territories)
}
add.dataframe <- function(df2, territories){
df3 <- mutate(df2, TERRITORY = territories)
return(df3)
}
new_territory <- new.function(df)
# finding all perfect numbers from 1 to 10,000
for (number in 1:10000){
div <- c()
for (divisor in 1:number){
if (number %% divisor == 0){
div <- c(div, divisor)
}
}
total <- 0
for (i in div){
total <- total + i
}
if ((total - number) == number){
print(number)
}
}
perfect_square <- 0
perfect_cube <- 0
perfect_fifth <- 0
for (i in 1:1000){
square <- floor(i ** (1/2))
cube <- floor(i ** (1/3))
fifth <- floor(i ** (1/5))
if ((square ** 2) != i){
perfect_square <- perfect_square + 1
}
if ((cube ** 3) != i){
perfect_cube <- perfect_cube + 1
}
if ((fifth ** 5) != i){
perfect_fifth <- perfect_fifth + 1
}
}
print(c(perfect_square, perfect_cube,perfect_fifth))
scores <- c()
for (i in 1:10){
unit <- as.numeric(readline("Enter score: "))
scores <- c(scores, )
}
scores <- c()
for (i in 1:10){
unit <- as.numeric(readline("Enter score: "))
scores <- c(scores, unit)
}
scores <- c()
for (i in 1:10){
unit <- as.numeric(readline("Enter score: "))
scores <- c(scores, unit)
}
max(scores)
min(scores)
# Getting the max and min scores
maximum <- scores[1]
minimum <- scores[1]
for (score in scores){
if (score > maximum){
maximum <- score
} else {
minimum <- score
}
}
print(c("Maximum" = maximum, "Minimum" = minimum))
# Getting the max and min scores
maximum <- scores[1]
minimum <- scores[1]
for (score in scores){
if (score > maximum){
maximum <- score
} else if (score < minimum) {
minimum <- score
}
}
print(c("Maximum" = maximum, "Minimum" = minimum))
len <- length(scores)
total <- 0
for (score in scores){
total <- total + score
}
avg <- total / len
avg
new_score <- scores[!scores %in% maximum]
new_score
new_max <- new_score[1]
for (score in new_score){
if (score > new_max){
new_max <- score
}
}
new_max
for (score in scores){
if (score > 100){
print("Value greater than 100 detected")
}
}
new_score <- scores[!scores %in% minimum]
new_min <- new_score[1]
for (score in new_score){
if (score < new_min){
new_min <- score
}
}
final_score <- new_score[!new_score %in% new_min]
final_score
len <- length(final_score)
total <- 0
for (score in final_score){
total <- total + score
}
avg <- total / len
avg
# install.packages("readr")
library(readr)
# install.packages("dplyr")
library(dplyr)
path <- "Brewery_data.csv"
df <- read_csv(path)
View(df)
path <- "C:/Users/Trainee/Desktop/Savadow/Brewery_data.csv"
df <- read_csv(path)
path <- "C:/Users/Trainee/Desktop/Savadow/R/Utiva/Brewery_data.csv"
df <- read_csv(path)
View(df)
# install.packages("readr")
library(readr)
# install.packages("dplyr")
library(dplyr)
